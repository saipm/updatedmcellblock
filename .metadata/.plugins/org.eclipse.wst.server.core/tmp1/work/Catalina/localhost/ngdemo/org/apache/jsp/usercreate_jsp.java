/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2016-01-04 18:40:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class usercreate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\n");
      out.write("<html ng-app=\"plunker\">\n");
      out.write("  <head>\n");
      out.write("    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.2.8/angular.js\"></script>\n");
      out.write("    <script src=\"http://angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.10.0.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/styles.css\"> \n");
      out.write("    <script src=\"example.js\"></script>\n");
      out.write("    <script src=\"js/controllers.js\"></script>\n");
      out.write("    <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("  \n");
      out.write("  <style>\n");
      out.write("  .dropdown-submenu{position:relative;}\n");
      out.write(".dropdown-submenu>.dropdown-menu{top:0;left:100%;margin-top:-6px;margin-left:-1px;-webkit-border-radius:0 6px 6px 6px;-moz-border-radius:0 6px 6px 6px;border-radius:0 6px 6px 6px;}\n");
      out.write(".dropdown-submenu:hover>.dropdown-menu{display:block;}\n");
      out.write(".dropdown-submenu>a:after{display:block;content:\" \";float:right;width:0;height:0;border-color:transparent;border-style:solid;border-width:5px 0 5px 5px;border-left-color:#cccccc;margin-top:5px;margin-right:-10px;}\n");
      out.write(".dropdown-submenu:hover>a:after{border-left-color:#ffffff;}\n");
      out.write(".dropdown-submenu.pull-left{float:none;}.dropdown-submenu.pull-left>.dropdown-menu{left:-100%;margin-left:10px;-webkit-border-radius:6px 0 6px 6px;-moz-border-radius:6px 0 6px 6px;border-radius:6px 0 6px 6px;}\n");
      out.write("  </style>  \n");
      out.write("  </head>\n");
      out.write("  <body data-ng-controller=\"CreateCtrl\"  data-ng-init=\"init()\" align=\"center\">\n");
      out.write("  <div align=\"center\" style=\"border:1px solid black\">\n");
      out.write("  <div ng-show=\"msgcheck\"></br><b>{{msg}}</b></br></div>\n");
      out.write("  <!-- <form   role=\"form\" > -->\n");
      out.write("  <h4>Account Details</h4></br>\n");
      out.write("  <label>Enter User Name:</label>\n");
      out.write("  <input type=\"text\" ng-model=\"name\" placeholder=\"Enter Name\" ng-model=\"name\"/> \n");
      out.write("  </br></br>\n");
      out.write("  <label style=\"margin-right:80px;\">Select User role:</label>\n");
      out.write("  <select data-ng-options=\"p.name for p in roles\" data-ng-model=\"role\">\n");
      out.write("</select>\n");
      out.write("</br></br>\n");
      out.write(" <label>Select User Designation:</label>\n");
      out.write(" <select data-ng-options=\"p.name for p in designations\" data-ng-model=\"designation\">\n");
      out.write("</select>\n");
      out.write("</br></br>\n");
      out.write("<label>Select User Department:</label>\n");
      out.write("<select data-ng-options=\"p.deptName for p in departments\" data-ng-model=\"dept\">\n");
      out.write("</select>\n");
      out.write("</br></br>\n");
      out.write("<h4><b>Functional Requirements</b></h4>\n");
      out.write("</br>\n");
      out.write("<label>Show Dashboard:\n");
      out.write("   &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<input type=\"checkbox\" ng-model=\"checkboxModel.value1\" ng-true-value=\"YES\" ng-false-value=\"NO\">\n");
      out.write("  </label><br/>\n");
      out.write("  <label>Access Testcases:\n");
      out.write("    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <input type=\"checkbox\" ng-model=\"checkboxModel.value2\"\n");
      out.write("           ng-true-value=\"YES\" ng-false-value=\"NO\">\n");
      out.write("   </label><br/>\n");
      out.write("</br>\n");
      out.write(" <div ng-show=\"checkboxModel.value2=='YES'\">\n");
      out.write("\n");
      out.write("  <div style=\"width:200px;\"ng-repeat=\"testcase in testcases\">&nbsp;&nbsp;\n");
      out.write("   <label><input type=\"checkbox\" ng-model=\"myTestcases.selected[testcase.id]\" ng-true-value=\"{{testcase.testcase}}\" ng-false-value=\"\">{{testcase.testcase}}</label>\n");
      out.write("  </div>\n");
      out.write("{{myTestcases.selected.6}}\n");
      out.write(" </div>\n");
      out.write("</br>\n");
      out.write("  <button type=\"submit\" ng-click=\"postdata(name,role,designation,dept,checkboxModel.value1,checkboxModel.value2,myTestcases.selected);clearall();msgcheck=!msgcheck;\" name=\"submit\" value=\"submit\">Submit</button>\n");
      out.write(" </br></br>\n");
      out.write("  </div>\n");
      out.write("   </body>\n");
      out.write("   </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
