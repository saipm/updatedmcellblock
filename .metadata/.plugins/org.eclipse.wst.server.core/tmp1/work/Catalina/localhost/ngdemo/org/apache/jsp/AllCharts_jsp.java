/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2016-01-27 21:36:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AllCharts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write(" <style>\n");
      out.write(" li {\n");
      out.write("    display: inline;\n");
      out.write("}\n");
      out.write("    .moreinfo {\n");
      out.write("    \t  display: inline-block;\n");
      out.write("    \t} \n");
      out.write("    \tTD{font-family: Arial;\n");
      out.write("    \t font-size: 11pt;}\n");
      out.write("    </style>\n");
      out.write("    <!-- <script src=\"https://code.jquery.com/jquery-1.9.1.min.js\"></script> -->\n");
      out.write("     <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script> \n");
      out.write("    <script src=\"http://code.highcharts.com/highcharts.js\"></script>\n");
      out.write("    <script src=\"http://code.highcharts.com/modules/exporting.js\"></script>\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("    var deviceId;\n");
      out.write("    var processed_json = new Array(); \n");
      out.write("    var processed_json1 = new Array();  \n");
      out.write("    $( document ).ready(function() {\n");
      out.write("    \tvar processed_json = new Array();\n");
      out.write("   \t var processed_json1 = new Array(); \n");
      out.write("   \t var url = window.location.href.split('/');\n");
      out.write("  \t  var baseUrl = url[0] + '//' + url[2]+\"/\"+url[3]+\"/\";\n");
      out.write("  \t // alert(\"Base Url:\"+baseUrl);\n");
      out.write("  \tvar pathname = window.location.pathname; // Returns path only\n");
      out.write("  \tvar url1      = window.location.href; \n");
      out.write("  var testcase = url1.substr(url1.indexOf(\"=\") + 1);\n");
      out.write("  var testcase1 = url1.substr(url1.indexOf(\"=\") + 1);\n");
      out.write("  testcase1 = testcase1.replace(/%20/g, ' ');\n");
      out.write("  document.getElementById(\"testcaseid\").innerHTML=testcase1;\n");
      out.write(" //   alert(testcase+\"sdjkdsjd\");\n");
      out.write("  \n");
      out.write("   \n");
      out.write("   \t $.getJSON(baseUrl+'web/devicetests/statscircle/'+testcase, function(data) {\n");
      out.write("   \t\t// alert(data);\n");
      out.write("   \t\t \n");
      out.write("       $('#Trillian').highcharts({\n");
      out.write("           chart: {\n");
      out.write("               plotBackgroundColor: null,\n");
      out.write("               plotBorderWidth: null,\n");
      out.write("               plotShadow: false,\n");
      out.write("               type: 'pie'\n");
      out.write("           },\n");
      out.write("           title: {\n");
      out.write("               text: \"Pass/Fail\"\n");
      out.write("           },\n");
      out.write("           tooltip: {\n");
      out.write("               pointFormat: '{series.name}: <b>{point.y}</b>'\n");
      out.write("           },\n");
      out.write("           plotOptions: {\n");
      out.write("               pie: {\n");
      out.write("                   allowPointSelect: true,\n");
      out.write("                   cursor: 'pointer',\n");
      out.write("                   point: {\n");
      out.write("                       events: {\n");
      out.write("                           click: function () {\n");
      out.write("                               //location.href = this.options.url;\n");
      out.write("                           }\n");
      out.write("                       }\n");
      out.write("                   },\n");
      out.write("                   dataLabels: {\n");
      out.write("                       enabled: true,\n");
      out.write("                         style: {\n");
      out.write("                             color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\n");
      out.write("                         },\n");
      out.write("                   },\n");
      out.write("               }\n");
      out.write("           \n");
      out.write("           },\n");
      out.write("           series: [{\n");
      out.write("           \t data: [{\n");
      out.write("           \t\t name:\"Pass\",\n");
      out.write("                    y: data[0],\n");
      out.write("                    /* url: baseUrl+'table-data.jsp?query=trillianpass', */\n");
      out.write("                    \t\tcolor:'#009900'\n");
      out.write("                }, {\n");
      out.write("               \t name:\"Fail\",\n");
      out.write("                    y: data[1],\n");
      out.write("                    /* url: baseUrl+'table-data.jsp?query=trillianfail', */\n");
      out.write("                    color:'#ff0000'\t\t \n");
      out.write("                }]\n");
      out.write("           }]\n");
      out.write("       }); \n");
      out.write("   \t });\n");
      out.write("       \n");
      out.write("   \n");
      out.write("   \n");
      out.write("   $.getJSON(baseUrl+'web/devicetests/statspassfail/'+testcase+\"/\"+\"Pass\", function(data1) {\n");
      out.write(" \t  for (i = 0; i < data1.length; i++){\n");
      out.write("           processed_json1.push([data1[i].app, parseInt(data1[i].device)]);\n");
      out.write("       \t}\n");
      out.write(" \t  Highcharts.setOptions({\n");
      out.write(" \t\t      colors: ['#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263','#6AF9C4'] \n");
      out.write(" \t\t      /*colors: ['#4D4D4D','#5DA5DA','#FAA43A', '#60BD68','#F17CB0', '#B2912F', '#B276B2','#DECF3F', '#F15854']*/ \n");
      out.write(" \t\t   });\n");
      out.write(" \t  var chart1;\n");
      out.write(" \t  chart1= $('#trillianpass').highcharts({\n");
      out.write("            chart: {\n");
      out.write("            \trenderTo:\"container\",\n");
      out.write("                type: \"area\"\n");
      out.write("                \n");
      out.write("            },\n");
      out.write("            title: {\n");
      out.write("                text: \"Testcase Pass trend\",\n");
      out.write("                //margin:20\n");
      out.write("            },\n");
      out.write("            xAxis: {\n");
      out.write("                tickInterval: 1,\n");
      out.write("                labels: {\n");
      out.write("                    enabled: true,\n");
      out.write("                    formatter: function() {\n");
      out.write("                        return processed_json1[this.value];\n");
      out.write("                    },\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            series: [{\n");
      out.write("            name:\"Pass\",\n");
      out.write("            data:processed_json1,\n");
      out.write("        }] \n");
      out.write("    }); \n");
      out.write("   }); \n");
      out.write("   \n");
      out.write("   $.getJSON(baseUrl+'web/devicetests/statspassfail/'+testcase+\"/\"+\"Fail\", function(data1) {\n");
      out.write("\t \t  for (i = 0; i < data1.length; i++){\n");
      out.write("\t           processed_json1.push([data1[i].app, parseInt(data1[i].device)]);\n");
      out.write("\t       \t}\n");
      out.write("\t \t  Highcharts.setOptions({\n");
      out.write("\t \t\t      colors: ['#ff0000'] \n");
      out.write("\t \t\t      /*colors: ['#4D4D4D','#5DA5DA','#FAA43A', '#60BD68','#F17CB0', '#B2912F', '#B276B2','#DECF3F', '#F15854']*/ \n");
      out.write("\t \t\t   });\n");
      out.write("\t \t  var chart1;\n");
      out.write("\t \t  chart1= $('#trillianfail').highcharts({\n");
      out.write("\t            chart: {\n");
      out.write("\t            \trenderTo:\"container\",\n");
      out.write("\t                type: \"area\"\n");
      out.write("\t                \n");
      out.write("\t            },\n");
      out.write("\t            title: {\n");
      out.write("\t                text: \"Testcase Fail trend\",\n");
      out.write("\t                //margin:20\n");
      out.write("\t            },\n");
      out.write("\t            xAxis: {\n");
      out.write("\t                tickInterval: 1,\n");
      out.write("\t                labels: {\n");
      out.write("\t                    enabled: true,\n");
      out.write("\t                    formatter: function() {\n");
      out.write("\t                        return processed_json1[this.value];\n");
      out.write("\t                    },\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            series: [{\n");
      out.write("\t            name:\"Fail\",\n");
      out.write("\t            data:processed_json1,\n");
      out.write("\t        }] \n");
      out.write("\t    }); \n");
      out.write("\t   }); \n");
      out.write("   \n");
      out.write("   });\n");
      out.write(" \n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("  <center><h2 id=\"testcaseid\"></h2></center>\n");
      out.write("   <div align=\"center\" class=\"moreinfo\">\n");
      out.write("     <!-- <span id=\"container1\" style=\"margin-left:100px;height:350px;width:300px;\"></span> -->\n");
      out.write("     <span class=\"moreinfo\" id=\"trillianpass\" style=\"min-width: 500px; height: 400px; margin: 0 auto\"></span>\n");
      out.write("     <span class=\"moreinfo\" id=\"trillianfail\" style=\"min-width: 500px; height: 400px; margin: 0 auto\"></span> </br>\n");
      out.write("     </br>\n");
      out.write("     <span class=\"moreinfo\"  id=\"Trillian\" style=\"align:center;min-width: 300px; height: 400px;\"></span>\n");
      out.write("   </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
