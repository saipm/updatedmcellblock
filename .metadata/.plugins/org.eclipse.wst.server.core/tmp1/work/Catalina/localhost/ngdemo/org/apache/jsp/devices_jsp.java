/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2015-12-17 17:53:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class devices_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" href = \"http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n");
      out.write("<!-- <script src= \"http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js\"></script> -->\n");
      out.write(" <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js\">\n");
      out.write("\n");
      out.write("</script>\n");
      out.write(" <link href=\"assets/css/bootstrap.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"assets/css/font-awesome.min.css\" rel=\"stylesheet\" />\n");
      out.write("     <link href=\"css/session.css\" rel=\"stylesheet\" /> \n");
      out.write("    <link href=\"css/elusive-webfont.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"css/pages.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"css/sunburst.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"css/screen.css\" rel=\"stylesheet\" />\n");
      out.write("    <!-- <link href=\"css/normalize.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"css/tricks.css\" rel=\"stylesheet\" /> -->\n");
      out.write("     \n");
      out.write("    <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>\n");
      out.write("<style>\n");
      out.write(".switch {\n");
      out.write("    \tposition: relative;\n");
      out.write("    \tdisplay: block;\n");
      out.write("    \tvertical-align: top;\n");
      out.write("    \twidth: 80px;\n");
      out.write("    \theight: 20px;\n");
      out.write("    \tpadding: 3px;\n");
      out.write("    \tmargin: 0 10px 10px 0;\n");
      out.write("    \tbackground: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px);\n");
      out.write("    \tbackground-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px);\n");
      out.write("    \tborder-radius: 18px;\n");
      out.write("    \tbox-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);\n");
      out.write("    \tcursor: pointer;\n");
      out.write("    }\n");
      out.write("    .switch-input {\n");
      out.write("    \tposition: absolute;\n");
      out.write("    \ttop: 0;\n");
      out.write("    \tleft: 0;\n");
      out.write("    \topacity: 0;\n");
      out.write("    }\n");
      out.write("    .switch-label {\n");
      out.write("    \tposition: relative;\n");
      out.write("    \tdisplay: block;\n");
      out.write("    \theight: inherit;\n");
      out.write("    \tfont-size: 10px;\n");
      out.write("    \ttext-transform: uppercase;\n");
      out.write("    \tbackground: #eceeef;\n");
      out.write("    \tborder-radius: inherit;\n");
      out.write("    \tbox-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);\n");
      out.write("    }\n");
      out.write("    .switch-label:before, .switch-label:after {\n");
      out.write("    \tposition: absolute;\n");
      out.write("    \ttop: 50%;\n");
      out.write("    \tmargin-top: -.5em;\n");
      out.write("    \tline-height: 1;\n");
      out.write("    \t-webkit-transition: inherit;\n");
      out.write("    \t-moz-transition: inherit;\n");
      out.write("    \t-o-transition: inherit;\n");
      out.write("    \ttransition: inherit;\n");
      out.write("    }\n");
      out.write("    .switch-label:before {\n");
      out.write("    \tcontent: attr(data-off);\n");
      out.write("    \tright: 9px;\n");
      out.write("    \tcolor: #aaaaaa;\n");
      out.write("    \ttext-shadow: 0 1px rgba(255, 255, 255, 0.5);\n");
      out.write("    }\n");
      out.write("    .switch-label:after {\n");
      out.write("    \tcontent: attr(data-on);\n");
      out.write("    \tleft: 9px;\n");
      out.write("    \tcolor: #FFFFFF;\n");
      out.write("    \ttext-shadow: 0 1px rgba(0, 0, 0, 0.2);\n");
      out.write("    \topacity: 0;\n");
      out.write("    }\n");
      out.write("    .switch-input:checked ~ .switch-label {\n");
      out.write("    \tbackground: #66CCFF;\n");
      out.write("    \tbox-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);\n");
      out.write("    }\n");
      out.write("    .switch-input:checked ~ .switch-label:before {\n");
      out.write("    \topacity: 0;\n");
      out.write("    }\n");
      out.write("    .switch-input:checked ~ .switch-label:after {\n");
      out.write("    \topacity: 1;\n");
      out.write("    }\n");
      out.write("    .switch-handle {\n");
      out.write("    \tposition: absolute;\n");
      out.write("    \ttop: 4px;\n");
      out.write("    \tleft: 4px;\n");
      out.write("    \twidth: 18px;\n");
      out.write("    \theight: 18px;\n");
      out.write("    \tbackground: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0);\n");
      out.write("    \tbackground-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0);\n");
      out.write("    \tborder-radius: 100%;\n");
      out.write("    \tbox-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\n");
      out.write("    }\n");
      out.write("    .switch-handle:before {\n");
      out.write("    \tcontent: \"\";\n");
      out.write("    \tposition: absolute;\n");
      out.write("    \ttop: 50%;\n");
      out.write("    \tleft: 50%;\n");
      out.write("    \tmargin: -6px 0 0 -6px;\n");
      out.write("    \twidth: 12px;\n");
      out.write("    \theight: 12px;\n");
      out.write("    \tbackground: linear-gradient(to bottom, #eeeeee, #FFFFFF);\n");
      out.write("    \tbackground-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF);\n");
      out.write("    \tborder-radius: 6px;\n");
      out.write("    \tbox-shadow: inset 0 1px rgba(0, 0, 0, 0.02);\n");
      out.write("    }\n");
      out.write("    .switch-input:checked ~ .switch-handle {\n");
      out.write("    \tleft: 64px;\n");
      out.write("    \tbox-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);\n");
      out.write("    }\n");
      out.write("     \n");
      out.write("    /* Transition\n");
      out.write("    ========================== */\n");
      out.write("    .switch-label, .switch-handle {\n");
      out.write("    \ttransition: All 0.3s ease;\n");
      out.write("    \t-webkit-transition: All 0.3s ease;\n");
      out.write("    \t-moz-transition: All 0.3s ease;\n");
      out.write("    \t-o-transition: All 0.3s ease;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    body{\n");
      out.write(" /*  background:#567; */\n");
      out.write("  font-family:'Open Sans',sans-serif;\n");
      out.write("}\n");
      out.write("html, body{\n");
      out.write("    background-color: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("tr.spaceUnder > td\n");
      out.write("{\n");
      out.write("  padding-bottom: 1em;\n");
      out.write("}\n");
      out.write("\n");
      out.write("tr.spaceUpper > td\n");
      out.write("{\n");
      out.write("  padding-top: 1em;\n");
      out.write("}\n");
      out.write("h4 { color: #0059b3; font-family: 'Lato', serif; font-size: 20px; font-weight: Normal; line-height: 48px; margin: 0; }\n");
      out.write("   </style> \n");
      out.write("<title>MCELLBLOCK</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write(" <body ng-app=\"ngdemo.controllers\" bg-color=\"white\"> \n");
      out.write("    <div id=\"header\">\n");
      out.write("        <div id=\"actions\">\n");
      out.write("  </br></br></br></br>\n");
      out.write("<div align=\"center\" class=\"span12\" ng-controller=\"DeviceListCtrl\"> \n");
      out.write("<div align=\"center\">\n");
      out.write("<h4 align=\"left\"><!-- <img src=\"img/bootstrap/mobile-integration-workgroup-squarelogo.png\" border=\"0\" alt=\"MIW\" style=\"margin-bottom:'0px';height:60px;width:'60px;'\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Number of devices connected:{{devices.length}}</h4>\n");
      out.write("</br></br>\n");
      out.write("</div>\n");
      out.write("    <table  class=\"table table-striped table-condensed\" >\n");
      out.write("      <!--   <thead>\n");
      out.write("        <tr>\n");
      out.write("            <th style=\"min-width: 80px;\">Device Name</th>\n");
      out.write("            <th style=\"min-width: 120px;\"></th> \n");
      out.write("            <th style=\"min-width: 80px;\">Install</th>\n");
      out.write("            <th style=\"min-width: 80px;\">Upload</th>\n");
      out.write("            <th style=\"min-width: 80px;\">Choose Application:</th>\n");
      out.write("            <th style=\"width:20px;\">&nbsp;</th>\n");
      out.write("            <th style=\"width:20px;\">&nbsp;</th>\n");
      out.write("        </tr>\n");
      out.write("        </thead> -->\n");
      out.write("        <tbody>\n");
      out.write("         <tr style=\"padding-bottom: 20px;\" height=\"130px\" ng-repeat=\"device in devices\">\n");
      out.write("         <td></td><td></td>\n");
      out.write("       <td>\n");
      out.write("       <input type=\"hidden\" ng-init=\"init(device.device)\" ng-model=\"device.device\">\n");
      out.write("       </td>\n");
      out.write("       <td>\n");
      out.write("       <div ng-show=\"device.model=='XT1033'\">\n");
      out.write("       <img src=\"img/bootstrap/150px-MotoG.png\" border=\"0\" alt=\"MIW\" style=\"margin-bottom:'0px';height:80px;width:'80px;'\"/>\n");
      out.write("       </div>\n");
      out.write("        <div ng-show=\"device.model=='SAMSUNG-SGH-I337'\">\n");
      out.write("       <img src=\"img/bootstrap/ss.jpeg\" border=\"0\" alt=\"MIW\" style=\"margin-bottom:'0px';height:80px;width:'80px;'\"/>\n");
      out.write("       </div>\n");
      out.write("       <div ng-show=\"device.model==''\">\n");
      out.write("       <img src=\"img/bootstrap/unnamed.png\" border=\"0\" alt=\"MIW\" style=\"margin-bottom:'0px';height:80px;width:'80px;'\"/>\n");
      out.write("       </div>\n");
      out.write("       </td>\n");
      out.write("        <td>  <a ng-click=\"showdetails(device.device)\" class=\" btn glyphicon glyphicon-phone\">\n");
      out.write("        <span ng-if=\"device.model==null\">{{device.device}} </span>\n");
      out.write("      </br></br>  <span ng-if=\"device.model!=null\">{{device.model}} </span>\n");
      out.write("       </a></td>\n");
      out.write("        \n");
      out.write("            <td></td><td></td><td></td><td></td>\n");
      out.write("            <td>\n");
      out.write("            </td><td>\n");
      out.write("            <input type=\"file\" id=\"install\" ng-model=\"file\" />\n");
      out.write("            <a ng-click=\"installapk(device.device,file)\" style=\"margin-top:5px;\" class=\"btn glyphicon glyphicon-download btn-primary\">Install</a>\n");
      out.write("            </td>\n");
      out.write("              <td><input type=\"text\" style=\"width: 250px; height:25px;\" id=\"upload\" ng-model=\"uploadfile\"/>\n");
      out.write("            <a ng-click=\"uploadFiles(device.device,uploadfile)\" class=\"btn glyphicon glyphicon-cloud-upload btn-primary\">Upload</a></td>\n");
      out.write("           </td>\n");
      out.write("             <!-- <td><a ng-click=\"runselect(device.device,test)\" class=\"btn btn-small btn-primary\">Run</a></td> -->\n");
      out.write("             <td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>\n");
      out.write("         <!--     <td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td> -->\n");
      out.write("             <td>  <a ng-click=\"showapps(device.device)\" class=\"btn glyphicon glyphicon-expand btn-primary\">Applications</a></td>\n");
      out.write("             <td></td>\n");
      out.write("          <!--      <td>\n");
      out.write("            <label style=\"margin-left:40px;\" class=\"switch switch-flat\">\n");
      out.write("    \t    \t<input class=\"switch-input\" type=\"checkbox\" />\n");
      out.write("    \t        \t<span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span> \n");
      out.write("    \t        \t<span class=\"switch-handle\"></span> \n");
      out.write("    \t        </label></td> -->\n");
      out.write("    \t        <td>\n");
      out.write("    \t        </td>\n");
      out.write("    \t        <td></td><td></td><td></td>\n");
      out.write("             </div>\n");
      out.write("         </tr> \n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
